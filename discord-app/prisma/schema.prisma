generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Profile {
  id        String    @id @default(uuid())
  // this is from clerk.userId
  userId    String    @unique
  name      String
  imageUrl  String    @db.Text
  email     String    @db.Text
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  // a user can have many Server and one 
  Server    Server[]
  Member    Member[]
  Channel   Channel[]
}

model Server {
  id         String @id @default(uuid())
  name       String
  imageUrl   String @db.Text
  inviteCode String @db.Text

  // referring to the profile modal
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Member    Member[]
  Channel   Channel[]
}

enum MemberRole {
  ADMIN
  GUEST
  MODERATOR
}

model Member {
  id   String     @id @default(uuid())
  role MemberRole @default(GUEST)

  porfile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String

  server   Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  serverId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id   String      @id @default(uuid())
  name String
  type ChannelType @default(TEXT)

  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String

  server   Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  serverId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
